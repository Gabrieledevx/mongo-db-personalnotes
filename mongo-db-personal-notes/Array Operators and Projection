>Target: MongoDB


>>Topic: Array Operators and projection

db.<colletion>.find({<query>}, {<projection>})

Specifies which fields should or should not be included in the result cursor.
>>> Do not combine 1s and 0s in a projection. <<<
	Except for {"_id : 0", <field>:1}

{ <field> : {"$elemMatch": {<field>: <value> }}}

Matches documents that contain an array field with at least one element that matches the specified query criteria 

or

Projects only the array elements with at least one element that matches the specified criteria. 

Commands


Connect to the Atlas cluster:
mongo "mongodb+srv://<username>:<password>@<cluster>.mongodb.net/admin"

Switch to this database:
use sample_airbnb

Find all documents with exactly 20 amenities which include all the amenities listed in the query array, and display their price and address:

db.listingsAndReviews.find({ "amenities":
        { "$size": 20, "$all": [ "Internet", "Wifi",  "Kitchen", "Heating",
                                 "Family/kid friendly", "Washer", "Dryer",
                                 "Essentials", "Shampoo", "Hangers",
                                 "Hair dryer", "Iron",
                                 "Laptop friendly workspace" ] } },
                            {"price": 1, "address": 1}).pretty()
                            
Find all documents that have Wifi as one of the amenities only include price and address in the resulting cursor:

db.listingsAndReviews.find({ "amenities": "Wifi" },
                           { "price": 1, "address": 1, "_id": 0 }).pretty()
                           
                     
Find all documents that have Wifi as one of the amenities only include price and address in the resulting cursor, also exclude ``"maximum_nights"``. **This will be an error:*

db.listingsAndReviews.find({ "amenities": "Wifi" },
                           { "price": 1, "address": 1,
                             "_id": 0, "maximum_nights":0 }).pretty()
                             


>Switch to this database:

use sample_training

>Get one document from the collection:

db.grades.findOne()


Find all documents where the student in class 431 received a grade higher than 85 for any type of assignment:

db.grades.find({ "class_id": 431 },
               { "scores": { "$elemMatch": { "score": { "$gt": 85 } } }
             }).pretty()
             
             
Find all documents where the student had an extra credit score:

db.grades.find({ "scores": { "$elemMatch": { "type": "extra credit" } }
               }).pretty()


-- Lab Main theme -- 

db.companies.find({"offices":{"$elemMatch": {"city":"Seattle"}}})


-- Quiz: Array Operators and projection --


db.companies.find({"funding_rounds":{"$size":8}},{"name":1})   X

db.companies.find({"funding_rounds":{"$size":8}},{"name":1,"_id":0}) X


db.companies.find({"funding_rounds":{"$size":8}},{"name":0,"founded_year":1})


Guide
db.grades.find({ "class_id": 431 },
               { "scores": { "$elemMatch": { "score": { "$gt": 85 } } }
             }).pretty()
             








